(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun epsilon () String)
(declare-fun sigmaStar_16 () String)
(declare-fun sigmaStar_18 () String)
(declare-fun x_9 () String)
(declare-fun sigmaStar_23 () String)
(declare-fun sigmaStar_31 () String)
(declare-fun x_19 () String)
(declare-fun literal_33 () String)
(declare-fun x_38 () String)
(declare-fun literal_37 () String)
(declare-fun x_32 () String)
(declare-fun x_44 () String)
(declare-fun literal_36 () String)
(declare-fun x_42 () String)
(declare-fun x_48 () String)
(declare-fun literal_40 () String)
(declare-fun x_46 () String)
(declare-fun x_51 () String)
(declare-fun literal_41 () String)
(declare-fun x_47 () String)
(declare-fun x_52 () String)
(declare-fun literal_45 () String)
(declare-fun x_50 () String)
(declare-fun x_54 () String)
(declare-fun literal_53 () String)
(declare-fun x_57 () String)
(declare-fun sigmaStar_60 () String)
(declare-fun literal_55 () String)
(declare-fun x_62 () String)
(declare-fun literal_56 () String)
(declare-fun x_63 () String)
(declare-fun sigmaStar_64 () String)
(declare-fun literal_49 () String)
(declare-fun literal_61 () String)
(declare-fun x_66 () String)
(declare-fun x_67 () String)
(declare-fun x_68 () String)
(declare-fun x_69 () String)
(declare-fun x_70 () String)
(declare-fun x_65 () String)
(declare-fun x_72 () String)
(declare-fun literal_73 () String)
(declare-fun x_77 () String)
(declare-fun literal_71 () String)
(declare-fun x_78 () String)
(declare-fun literal_79 () String)
(declare-fun x_81 () String)
(declare-fun literal_80 () String)
(declare-fun x_82 () String)
(declare-fun literal_83 () String)
(declare-fun x_84 () String)
(assert (= epsilon ""))
(assert (= x_9 (str.replace epsilon "\u{26}\u{6c}\u{74}\u{3b}" "\u{3c}")))
(assert (= x_19 (str.replace x_9 "\u{26}\u{67}\u{74}\u{3b}" "\u{3e}")))
(assert (= x_32 (str.replace x_19 "\u{21}\u{5c}\u{72}\u{5c}\u{6e}\u{3f}\u{21}" "\u{20}")))
(assert (= literal_33 "\u{2f}\u{2f}"))
(assert (= x_38 (str.++ literal_33 sigmaStar_23)))
(assert (= literal_37 "\u{5c}\u{4c}\u{61}\u{72}\u{67}\u{65}\u{20}"))
(assert (= x_44 (str.++ literal_37 x_32)))
(assert (= literal_36 "\u{20}\u{2b}\u{2b}\u{20}\u{2d}\u{65}\u{20}\u{20}\u{5c}\u{22}"))
(assert (or (= x_42 x_38) (= x_42 sigmaStar_0)))
(assert (= x_48 (str.++ literal_36 x_42)))
(assert (= literal_40 "\u{5c}\u{22}\u{2f}\u{2f}\u{6d}\u{69}\u{6d}\u{65}\u{74}\u{65}\u{78}\u{2e}\u{64}\u{61}\u{72}\u{77}\u{69}\u{6e}\u{5c}\u{22}\u{20}\u{2d}\u{65}\u{20}\u{5c}\u{22}"))
(assert (or (= x_46 x_38) (= x_46 sigmaStar_4)))
(assert (= x_51 (str.++ literal_40 x_46)))
(assert (= literal_41 "\u{5c}\u{22}\u{2f}\u{2f}\u{6d}\u{69}\u{6d}\u{65}\u{74}\u{65}\u{78}\u{2e}\u{6c}\u{69}\u{6e}\u{75}\u{78}\u{5c}\u{22}\u{20}\u{2d}\u{65}\u{20}\u{5c}\u{22}"))
(assert (or (= x_47 sigmaStar_1) (= x_47 x_38)))
(assert (= x_52 (str.++ literal_41 x_47)))
(assert (= literal_45 "\u{2f}\u{2f}\u{6d}\u{69}\u{6d}\u{65}\u{74}\u{65}\u{78}\u{20}\u{2d}\u{65}\u{20}"))
(assert (or (= x_50 sigmaStar_2) (= x_50 x_38)))
(assert (= x_54 (str.++ literal_45 x_50)))
(assert (= literal_53 "\u{5c}\u{22}\u{20}\u{2d}\u{2d}\u{20}"))
(assert (= x_57 (str.++ x_48 literal_53)))
(assert (= literal_55 "\u{5c}\u{22}\u{20}\u{2d}\u{2d}\u{20}"))
(assert (= x_62 (str.++ x_51 literal_55)))
(assert (= literal_56 "\u{5c}\u{22}\u{20}\u{2d}\u{2d}\u{20}"))
(assert (= x_63 (str.++ x_52 literal_56)))
(assert (= literal_49 "\u{2f}\u{2f}\u{6d}\u{69}\u{6d}\u{65}\u{74}\u{65}\u{78}\u{2e}\u{65}\u{78}\u{65}"))
(assert (= x_65 (str.replace literal_49 "\u{20}" "\u{5e}\u{20}")))
(assert (= literal_61 "\u{20}\u{2d}\u{2d}\u{20}"))
(assert (= x_66 (str.++ x_54 literal_61)))
(assert (= x_67 (str.++ x_57 sigmaStar_60)))
(assert (= x_68 (str.++ x_62 sigmaStar_60)))
(assert (= x_69 (str.++ x_63 sigmaStar_60)))
(assert (= x_70 (str.++ x_66 sigmaStar_60)))
(assert (= x_72 (str.++ x_65 x_67)))
(assert (= literal_73 "\u{54}\u{68}\u{65}\u{20}\u{73}\u{68}\u{65}\u{6c}\u{6c}\u{20}\u{63}\u{6f}\u{6d}\u{6d}\u{61}\u{6e}\u{64}\u{3c}\u{62}\u{72}\u{20}\u{2f}\u{3e}"))
(assert (= literal_71 ""))
(assert (or (= x_77 x_72) (= x_77 literal_71) (= x_77 x_70) (= x_77 x_69) (= x_77 x_68)))
(assert (= x_78 (str.++ literal_73 x_77)))
(assert (= literal_79 "\u{3c}\u{62}\u{72}\u{20}\u{2f}\u{3e}\u{72}\u{65}\u{74}\u{75}\u{72}\u{6e}\u{65}\u{64}\u{20}\u{73}\u{74}\u{61}\u{74}\u{75}\u{73}\u{20}\u{3d}\u{20}"))
(assert (= x_81 (str.++ x_78 literal_79)))
(assert (= literal_80 ""))
(assert (= x_82 (str.++ x_81 literal_80)))
(assert (= literal_83 "\u{3c}\u{62}\u{72}\u{20}\u{2f}\u{3e}\u{5c}\u{6e}"))
(assert (= x_84 (str.++ x_82 literal_83)))
(assert (str.in_re x_84 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
