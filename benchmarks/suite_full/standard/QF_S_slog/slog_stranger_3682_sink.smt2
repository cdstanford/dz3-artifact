(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun sigmaStar_10 () String)
(declare-fun sigmaStar_11 () String)
(declare-fun sigmaStar_12 () String)
(declare-fun literal_19 () String)
(declare-fun x_23 () String)
(declare-fun literal_25 () String)
(declare-fun x_35 () String)
(declare-fun literal_26 () String)
(declare-fun x_36 () String)
(declare-fun literal_27 () String)
(declare-fun x_37 () String)
(declare-fun literal_33 () String)
(declare-fun x_38 () String)
(declare-fun literal_34 () String)
(declare-fun x_39 () String)
(declare-fun sigmaStar_43 () String)
(declare-fun sigmaStar_44 () String)
(declare-fun literal_45 () String)
(declare-fun x_46 () String)
(declare-fun literal_40 () String)
(declare-fun x_48 () String)
(declare-fun literal_41 () String)
(declare-fun x_49 () String)
(declare-fun literal_42 () String)
(declare-fun x_50 () String)
(declare-fun literal_47 () String)
(declare-fun x_51 () String)
(declare-fun x_52 () String)
(declare-fun x_53 () String)
(declare-fun x_54 () String)
(declare-fun x_55 () String)
(declare-fun literal_65 () String)
(declare-fun x_64 () String)
(declare-fun x_66 () String)
(declare-fun literal_67 () String)
(declare-fun x_68 () String)
(assert (= literal_19 "\u{42}\u{79}\u{74}\u{65}\u{73}"))
(assert (= x_23 (str.++ sigmaStar_0 literal_19)))
(assert (= literal_25 "\u{3c}\u{62}\u{3e}"))
(assert (= x_35 (str.++ literal_25 sigmaStar_5)))
(assert (= literal_26 "\u{3c}\u{62}\u{3e}"))
(assert (= x_36 (str.++ literal_26 sigmaStar_6)))
(assert (= literal_27 "\u{3c}\u{62}\u{3e}"))
(assert (= x_37 (str.++ literal_27 sigmaStar_4)))
(assert (= literal_33 "\u{3c}\u{62}\u{3e}"))
(assert (= x_38 (str.++ literal_33 sigmaStar_7)))
(assert (= literal_34 "\u{3c}\u{62}\u{3e}"))
(assert (= x_39 (str.++ literal_34 sigmaStar_8)))
(assert (= literal_45 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{62}\u{72}\u{3e}\u{5c}\u{6e}"))
(assert (= x_46 (str.++ x_38 literal_45)))
(assert (= literal_40 "\u{3c}\u{2f}\u{62}\u{3e}"))
(assert (= x_48 (str.++ x_35 literal_40)))
(assert (= literal_41 "\u{3c}\u{2f}\u{62}\u{3e}"))
(assert (= x_49 (str.++ x_36 literal_41)))
(assert (= literal_42 "\u{3c}\u{2f}\u{62}\u{3e}"))
(assert (= x_50 (str.++ x_37 literal_42)))
(assert (= literal_47 "\u{3c}\u{2f}\u{62}\u{3e}"))
(assert (= x_51 (str.++ x_39 literal_47)))
(assert (= x_52 (str.++ x_46 sigmaStar_2)))
(assert (= x_53 (str.++ x_46 sigmaStar_43)))
(assert (= x_54 (str.++ x_46 sigmaStar_10)))
(assert (= x_55 (str.++ x_46 sigmaStar_44)))
(assert (= literal_65 "\u{3c}\u{64}\u{69}\u{76}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{3e}"))
(assert (or (= x_64 x_55) (= x_64 x_54) (= x_64 x_53) (= x_64 x_52) (= x_64 x_51) (= x_64 x_50) (= x_64 sigmaStar_1) (= x_64 x_49) (= x_64 x_48) (= x_64 x_46)))
(assert (= x_66 (str.++ literal_65 x_64)))
(assert (= literal_67 "\u{3c}\u{2f}\u{64}\u{69}\u{76}\u{3e}\u{5c}\u{6e}"))
(assert (= x_68 (str.++ x_66 literal_67)))
(assert (str.in_re x_68 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
