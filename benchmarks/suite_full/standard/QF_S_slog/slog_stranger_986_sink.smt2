(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun literal_26 () String)
(declare-fun x_25 () String)
(declare-fun literal_16 () String)
(declare-fun literal_24 () String)
(declare-fun literal_14 () String)
(declare-fun x_29 () String)
(declare-fun literal_30 () String)
(declare-fun x_31 () String)
(declare-fun literal_34 () String)
(declare-fun x_35 () String)
(declare-fun literal_33 () String)
(declare-fun x_36 () String)
(declare-fun literal_37 () String)
(declare-fun x_38 () String)
(declare-fun sigmaStar_39 () String)
(declare-fun literal_40 () String)
(declare-fun x_41 () String)
(assert (= literal_26 "\u{20}\u{41}\u{4e}\u{44}\u{20}\u{28}\u{63}\u{2e}\u{67}\u{72}\u{6f}\u{75}\u{70}\u{69}\u{64}\u{3d}\u{27}"))
(assert (= literal_16 "\u{63}\u{6f}\u{75}\u{72}\u{73}\u{65}"))
(assert (= literal_24 "\u{30}"))
(assert (= literal_14 "\u{63}\u{6f}\u{75}\u{72}\u{73}\u{65}"))
(assert (or (= x_25 literal_16) (= x_25 literal_24) (= x_25 literal_14)))
(assert (= x_29 (str.++ literal_26 x_25)))
(assert (= literal_30 "\u{20}\u{4f}\u{52}\u{20}\u{63}\u{2e}\u{67}\u{72}\u{6f}\u{75}\u{70}\u{69}\u{64}\u{3d}\u{30}\u{27}\u{29}"))
(assert (= x_31 (str.++ x_29 literal_30)))
(assert (= literal_34 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{20}\u{44}\u{49}\u{53}\u{54}\u{49}\u{4e}\u{43}\u{54}\u{20}\u{75}\u{2e}\u{69}\u{64}\u{2c}\u{20}\u{75}\u{2e}\u{66}\u{69}\u{72}\u{73}\u{74}\u{6e}\u{61}\u{6d}\u{65}\u{2c}\u{20}\u{75}\u{2e}\u{6c}\u{61}\u{73}\u{74}\u{6e}\u{61}\u{6d}\u{65}\u{2c}\u{20}\u{75}\u{2e}\u{70}\u{69}\u{63}\u{74}\u{75}\u{72}\u{65}\u{2c}\u{20}\u{63}\u{2e}\u{6c}\u{61}\u{73}\u{74}\u{6d}\u{65}\u{73}\u{73}\u{61}\u{67}\u{65}\u{70}\u{69}\u{6e}\u{67}\u{2c}\u{20}\u{63}\u{2e}\u{66}\u{69}\u{72}\u{73}\u{74}\u{70}\u{69}\u{6e}\u{67}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{46}\u{52}\u{4f}\u{4d}\u{20}\u{63}\u{68}\u{61}\u{74}\u{5f}\u{75}\u{73}\u{65}\u{72}\u{73}\u{20}\u{63}\u{2c}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{75}\u{73}\u{65}\u{72}\u{20}\u{75}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{57}\u{48}\u{45}\u{52}\u{45}\u{20}\u{63}\u{2e}\u{63}\u{68}\u{61}\u{74}\u{69}\u{64}\u{20}\u{3d}\u{20}\u{27}\u{27}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{41}\u{4e}\u{44}\u{20}\u{75}\u{2e}\u{69}\u{64}\u{20}\u{3d}\u{20}\u{63}\u{2e}\u{75}\u{73}\u{65}\u{72}\u{69}\u{64}\u{20}"))
(assert (= literal_33 ""))
(assert (or (= x_35 x_31) (= x_35 literal_33)))
(assert (= x_36 (str.++ literal_34 x_35)))
(assert (= literal_37 "\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{20}\u{42}\u{59}\u{20}\u{63}\u{2e}\u{66}\u{69}\u{72}\u{73}\u{74}\u{70}\u{69}\u{6e}\u{67}\u{20}\u{41}\u{53}\u{43}"))
(assert (= x_38 (str.++ x_36 literal_37)))
(assert (= literal_40 "\u{3c}\u{62}\u{72}\u{20}\u{2f}\u{3e}"))
(assert (= x_41 (str.++ x_38 literal_40)))
(assert (str.in_re x_41 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
