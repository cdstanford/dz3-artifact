(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun literal_5 () String)
(declare-fun x_6 () String)
(declare-fun x_9 () String)
(declare-fun literal_8 () String)
(declare-fun x_10 () String)
(declare-fun x_11 () String)
(declare-fun literal_13 () String)
(declare-fun x_12 () String)
(declare-fun literal_7 () String)
(declare-fun x_14 () String)
(declare-fun literal_15 () String)
(declare-fun x_16 () String)
(declare-fun x_18 () String)
(declare-fun literal_17 () String)
(declare-fun x_20 () String)
(declare-fun literal_19 () String)
(declare-fun x_21 () String)
(declare-fun literal_22 () String)
(declare-fun x_23 () String)
(declare-fun x_24 () String)
(declare-fun x_26 () String)
(declare-fun literal_25 () String)
(declare-fun x_29 () String)
(declare-fun literal_30 () String)
(declare-fun x_40 () String)
(declare-fun x_31 () String)
(declare-fun literal_27 () String)
(declare-fun literal_28 () String)
(declare-fun x_41 () String)
(declare-fun x_49 () String)
(declare-fun literal_32 () String)
(declare-fun literal_37 () String)
(declare-fun literal_38 () String)
(declare-fun literal_39 () String)
(declare-fun literal_33 () String)
(declare-fun literal_34 () String)
(declare-fun literal_35 () String)
(declare-fun literal_36 () String)
(declare-fun x_51 () String)
(declare-fun literal_50 () String)
(declare-fun x_54 () String)
(declare-fun literal_55 () String)
(declare-fun x_57 () String)
(declare-fun x_56 () String)
(declare-fun literal_52 () String)
(declare-fun literal_53 () String)
(declare-fun x_58 () String)
(declare-fun x_59 () String)
(assert (= literal_5 "\u{2f}"))
(assert (= x_6 (str.++ sigmaStar_4 literal_5)))
(assert (= x_9 (str.++ x_6 sigmaStar_4)))
(assert (= literal_8 "\u{2f}"))
(assert (= x_10 (str.++ x_9 literal_8)))
(assert (= x_11 (str.++ x_10 sigmaStar_4)))
(assert (= literal_13 "\u{3c}\u{2f}\u{73}\u{65}\u{6c}\u{65}\u{63}\u{74}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{74}\u{64}\u{3e}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{74}\u{65}\u{78}\u{74}\u{27}\u{20}\u{6d}\u{61}\u{78}\u{6c}\u{65}\u{6e}\u{67}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{30}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{73}\u{74}\u{61}\u{72}\u{74}\u{64}\u{61}\u{74}\u{65}\u{27}\u{20}\u{73}\u{69}\u{7a}\u{65}\u{3d}\u{27}\u{38}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= literal_7 ""))
(assert (or (= x_12 x_11) (= x_12 literal_7)))
(assert (= x_14 (str.++ literal_13 x_12)))
(assert (= literal_15 "\u{27}\u{20}\u{2f}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{74}\u{64}\u{3e}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{74}\u{65}\u{78}\u{74}\u{27}\u{20}\u{6d}\u{61}\u{78}\u{6c}\u{65}\u{6e}\u{67}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{30}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{6d}\u{69}\u{64}\u{64}\u{61}\u{74}\u{65}\u{27}\u{20}\u{73}\u{69}\u{7a}\u{65}\u{3d}\u{27}\u{38}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= x_16 (str.++ x_14 literal_15)))
(assert (= x_18 (str.++ x_16 x_12)))
(assert (= literal_17 "\u{3e}\u{53}\u{65}\u{63}\u{6f}\u{6e}\u{64}\u{3c}\u{2f}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{3e}\u{0d}\u{0a}\u{09}\u{20}\u{3c}\u{2f}\u{73}\u{65}\u{6c}\u{65}\u{63}\u{74}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{3e}\u{0d}\u{0a}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{62}\u{72}\u{3e}\u{0d}\u{0a}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{20}\u{63}\u{65}\u{6c}\u{6c}\u{70}\u{61}\u{64}\u{64}\u{69}\u{6e}\u{67}\u{3d}\u{27}\u{30}\u{27}\u{20}\u{62}\u{6f}\u{72}\u{64}\u{65}\u{72}\u{3d}\u{27}\u{30}\u{27}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{36}\u{30}\u{30}\u{27}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{62}\u{75}\u{74}\u{74}\u{6f}\u{6e}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}\u{45}\u{64}\u{69}\u{74}\u{20}\u{53}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{27}\u{20}\u{6f}\u{6e}\u{43}\u{6c}\u{69}\u{63}\u{6b}\u{3d}\u{27}\u{64}\u{6f}\u{63}\u{75}\u{6d}\u{65}\u{6e}\u{74}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{31}\u{3b}\u{64}\u{6f}\u{63}\u{75}\u{6d}\u{65}\u{6e}\u{74}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{70}\u{61}\u{67}\u{65}\u{32}\u{2e}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{35}\u{3b}\u{64}\u{6f}\u{63}\u{75}\u{6d}\u{65}\u{6e}\u{74}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{73}\u{75}\u{62}\u{6d}\u{69}\u{74}\u{28}\u{29}\u{3b}\u{27}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{62}\u{75}\u{74}\u{74}\u{6f}\u{6e}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}\u{43}\u{61}\u{6e}\u{63}\u{65}\u{6c}\u{27}\u{20}\u{6f}\u{6e}\u{43}\u{6c}\u{69}\u{63}\u{6b}\u{3d}\u{27}\u{64}\u{6f}\u{63}\u{75}\u{6d}\u{65}\u{6e}\u{74}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{70}\u{61}\u{67}\u{65}\u{32}\u{2e}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{35}\u{3b}\u{64}\u{6f}\u{63}\u{75}\u{6d}\u{65}\u{6e}\u{74}\u{2e}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{2e}\u{73}\u{75}\u{62}\u{6d}\u{69}\u{74}\u{28}\u{29}\u{3b}\u{27}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{3e}\u{0d}\u{0a}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{65}\u{64}\u{69}\u{74}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{27}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{73}\u{65}\u{6d}\u{65}\u{73}\u{74}\u{65}\u{72}\u{69}\u{64}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= x_20 (str.++ literal_17 sigmaStar_1)))
(assert (= literal_19 "\u{27}\u{20}\u{2f}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{74}\u{64}\u{3e}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{74}\u{65}\u{78}\u{74}\u{27}\u{20}\u{6d}\u{61}\u{78}\u{6c}\u{65}\u{6e}\u{67}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{30}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{65}\u{6e}\u{64}\u{64}\u{61}\u{74}\u{65}\u{27}\u{20}\u{73}\u{69}\u{7a}\u{65}\u{3d}\u{27}\u{38}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= x_21 (str.++ x_18 literal_19)))
(assert (= literal_22 "\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{70}\u{61}\u{67}\u{65}\u{32}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= x_23 (str.++ x_20 literal_22)))
(assert (= x_24 (str.++ x_21 x_12)))
(assert (= x_26 (str.++ x_23 sigmaStar_0)))
(assert (= literal_25 "\u{27}\u{20}\u{2f}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{3c}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{09}\u{20}\u{3c}\u{73}\u{65}\u{6c}\u{65}\u{63}\u{74}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{68}\u{61}\u{6c}\u{66}\u{27}\u{3e}\u{0d}\u{0a}\u{09}\u{20}\u{20}\u{3c}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}\u{31}\u{27}\u{20}"))
(assert (= x_29 (str.++ x_24 literal_25)))
(assert (= literal_30 "\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{6c}\u{6f}\u{67}\u{6f}\u{75}\u{74}\u{27}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{70}\u{61}\u{67}\u{65}\u{27}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}"))
(assert (= x_40 (str.++ x_26 literal_30)))
(assert (= literal_27 ""))
(assert (= literal_28 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{45}\u{44}"))
(assert (or (= x_31 literal_27) (= x_31 literal_28)))
(assert (= x_41 (str.++ x_29 x_31)))
(assert (= literal_32 "\u{32}"))
(assert (= literal_37 "\u{30}"))
(assert (= literal_38 "\u{32}"))
(assert (= literal_39 "\u{30}"))
(assert (= literal_33 "\u{34}"))
(assert (= literal_34 "\u{30}"))
(assert (= literal_35 "\u{35}"))
(assert (= literal_36 "\u{31}"))
(assert (or (= x_49 literal_32) (= x_49 literal_37) (= x_49 literal_38) (= x_49 sigmaStar_2) (= x_49 literal_39) (= x_49 literal_33) (= x_49 literal_34) (= x_49 literal_35) (= x_49 literal_36)))
(assert (= x_51 (str.++ x_40 x_49)))
(assert (= literal_50 "\u{3e}\u{46}\u{69}\u{72}\u{73}\u{74}\u{3c}\u{2f}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{3e}\u{0d}\u{0a}\u{09}\u{20}\u{20}\u{3c}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{27}\u{32}\u{27}\u{20}"))
(assert (= x_54 (str.++ x_41 literal_50)))
(assert (= literal_55 "\u{3e}\u{0d}\u{0a}\u{0d}\u{0a}\u{20}\u{3c}\u{2f}\u{66}\u{6f}\u{72}\u{6d}\u{3e}\u{0d}\u{0a}\u{0d}\u{0a}\u{20}\u{3c}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{35}\u{32}\u{30}\u{27}\u{20}\u{62}\u{6f}\u{72}\u{64}\u{65}\u{72}\u{3d}\u{30}\u{20}\u{63}\u{65}\u{6c}\u{6c}\u{73}\u{70}\u{61}\u{63}\u{69}\u{6e}\u{67}\u{3d}\u{30}\u{20}\u{63}\u{65}\u{6c}\u{6c}\u{70}\u{61}\u{64}\u{64}\u{69}\u{6e}\u{67}\u{3d}\u{30}\u{20}\u{68}\u{65}\u{69}\u{67}\u{68}\u{74}\u{3d}\u{31}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{74}\u{64}\u{20}\u{76}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{74}\u{6f}\u{70}\u{27}\u{3e}\u{0d}\u{0a}\u{09}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{20}\u{3c}\u{2f}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{3e}\u{0d}\u{0a}\u{20}"))
(assert (= x_57 (str.++ x_51 literal_55)))
(assert (= literal_52 ""))
(assert (= literal_53 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{45}\u{44}"))
(assert (or (= x_56 literal_52) (= x_56 literal_53)))
(assert (= x_58 (str.++ x_54 x_56)))
(assert (= x_59 (str.++ x_58 x_57)))
(assert (str.in_re x_59 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
