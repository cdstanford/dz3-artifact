(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun literal_10 () String)
(declare-fun x_11 () String)
(declare-fun literal_13 () String)
(declare-fun x_14 () String)
(declare-fun literal_12 () String)
(declare-fun x_15 () String)
(declare-fun sigmaStar_18 () String)
(declare-fun literal_17 () String)
(declare-fun x_19 () String)
(declare-fun x_20 () String)
(declare-fun literal_21 () String)
(declare-fun x_22 () String)
(assert (= literal_10 "\u{3c}\u{74}\u{72}\u{20}\u{76}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{22}\u{74}\u{6f}\u{70}\u{22}\u{3e}\u{5c}\u{6e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6f}\u{6c}\u{73}\u{70}\u{61}\u{6e}\u{3d}\u{22}\u{32}\u{22}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{22}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{22}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{3c}\u{62}\u{3e}\u{74}\u{68}\u{65}\u{67}\u{72}\u{61}\u{64}\u{65}\u{69}\u{73}\u{3a}\u{20}"))
(assert (= x_11 (str.++ literal_10 sigmaStar_9)))
(assert (= literal_13 "\u{20}\u{28}"))
(assert (= x_14 (str.++ x_11 literal_13)))
(assert (= literal_12 "\u{6d}\u{61}\u{78}\u{69}\u{6d}\u{75}\u{6d}\u{67}\u{72}\u{61}\u{64}\u{65}"))
(assert (= x_15 (str.++ x_14 literal_12)))
(assert (= literal_17 "\u{20}"))
(assert (= x_19 (str.++ x_15 literal_17)))
(assert (= x_20 (str.++ x_19 sigmaStar_18)))
(assert (= literal_21 "\u{29}\u{3c}\u{2f}\u{62}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{3c}\u{74}\u{72}\u{3e}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6f}\u{6c}\u{73}\u{70}\u{61}\u{6e}\u{3d}\u{22}\u{32}\u{22}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{22}\u{77}\u{6f}\u{72}\u{6b}\u{73}\u{68}\u{6f}\u{70}\u{61}\u{73}\u{73}\u{65}\u{73}\u{73}\u{6d}\u{65}\u{6e}\u{74}\u{68}\u{65}\u{61}\u{64}\u{69}\u{6e}\u{67}\u{22}\u{3e}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{5c}\u{6e}"))
(assert (= x_22 (str.++ x_20 literal_21)))
(assert (str.in_re x_22 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
