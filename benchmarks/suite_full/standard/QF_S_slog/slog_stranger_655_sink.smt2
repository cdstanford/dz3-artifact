(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun literal_17 () String)
(declare-fun x_18 () String)
(declare-fun literal_16 () String)
(declare-fun literal_13 () String)
(declare-fun x_21 () String)
(declare-fun literal_22 () String)
(declare-fun x_23 () String)
(declare-fun literal_20 () String)
(declare-fun x_26 () String)
(declare-fun literal_27 () String)
(declare-fun x_28 () String)
(declare-fun literal_25 () String)
(declare-fun x_31 () String)
(declare-fun literal_32 () String)
(declare-fun x_34 () String)
(declare-fun x_35 () String)
(declare-fun literal_30 () String)
(declare-fun literal_33 () String)
(declare-fun x_38 () String)
(declare-fun literal_39 () String)
(declare-fun x_40 () String)
(declare-fun literal_37 () String)
(declare-fun x_41 () String)
(declare-fun literal_42 () String)
(declare-fun x_43 () String)
(declare-fun literal_44 () String)
(declare-fun x_45 () String)
(declare-fun literal_36 () String)
(declare-fun x_46 () String)
(declare-fun literal_49 () String)
(declare-fun x_50 () String)
(declare-fun literal_48 () String)
(declare-fun x_51 () String)
(declare-fun literal_52 () String)
(declare-fun x_53 () String)
(assert (= literal_17 "\u{2f}\u{63}\u{6f}\u{75}\u{72}\u{73}\u{65}\u{2f}\u{72}\u{65}\u{70}\u{6f}\u{72}\u{74}\u{2f}\u{70}\u{61}\u{72}\u{74}\u{69}\u{63}\u{69}\u{70}\u{61}\u{74}\u{69}\u{6f}\u{6e}\u{2f}\u{69}\u{6e}\u{64}\u{65}\u{78}\u{2e}\u{70}\u{68}\u{70}\u{3f}\u{69}\u{64}\u{3d}\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{74}\u{65}\u{61}\u{63}\u{68}\u{65}\u{72}\u{73}\u{3d}\u{74}\u{65}\u{61}\u{63}\u{68}\u{65}\u{72}\u{73}\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{69}\u{6e}\u{73}\u{74}\u{61}\u{6e}\u{63}\u{65}\u{69}\u{64}\u{3d}"))
(assert (= literal_16 "\u{30}"))
(assert (= literal_13 "\u{69}\u{6e}\u{73}\u{74}\u{61}\u{6e}\u{63}\u{65}\u{69}\u{64}"))
(assert (or (= x_18 literal_16) (= x_18 literal_13)))
(assert (= x_21 (str.++ literal_17 x_18)))
(assert (= literal_22 "\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{74}\u{69}\u{6d}\u{65}\u{66}\u{72}\u{6f}\u{6d}\u{3d}"))
(assert (= x_23 (str.++ x_21 literal_22)))
(assert (= literal_20 "\u{74}\u{69}\u{6d}\u{65}\u{66}\u{72}\u{6f}\u{6d}"))
(assert (= x_26 (str.++ x_23 literal_20)))
(assert (= literal_27 "\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{6d}\u{6f}\u{64}\u{75}\u{6c}\u{65}\u{69}\u{64}\u{3d}"))
(assert (= x_28 (str.++ x_26 literal_27)))
(assert (= literal_25 "\u{6d}\u{6f}\u{64}\u{75}\u{6c}\u{65}\u{69}\u{64}"))
(assert (= x_31 (str.++ x_28 literal_25)))
(assert (= literal_32 "\u{26}\u{61}\u{63}\u{74}\u{69}\u{6f}\u{6e}\u{3d}"))
(assert (= x_34 (str.++ x_31 literal_32)))
(assert (= literal_30 "\u{61}\u{63}\u{74}\u{69}\u{6f}\u{6e}"))
(assert (= literal_33 ""))
(assert (or (= x_35 literal_30) (= x_35 literal_33)))
(assert (= x_38 (str.++ x_34 x_35)))
(assert (= literal_39 "\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{70}\u{65}\u{72}\u{70}\u{61}\u{67}\u{65}\u{3d}"))
(assert (= x_40 (str.++ x_38 literal_39)))
(assert (= literal_37 "\u{70}\u{65}\u{72}\u{70}\u{61}\u{67}\u{65}"))
(assert (= x_41 (str.++ x_40 literal_37)))
(assert (= literal_42 "\u{3c}\u{64}\u{69}\u{76}\u{20}\u{69}\u{64}\u{3d}\u{22}\u{73}\u{68}\u{6f}\u{77}\u{61}\u{6c}\u{6c}\u{22}\u{3e}\u{3c}\u{61}\u{20}\u{68}\u{72}\u{65}\u{66}\u{3d}\u{22}"))
(assert (= x_43 (str.++ literal_42 x_41)))
(assert (= literal_44 "\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{70}\u{65}\u{72}\u{70}\u{61}\u{67}\u{65}\u{3d}"))
(assert (= x_45 (str.++ x_43 literal_44)))
(assert (= literal_36 "\u{32}\u{30}"))
(assert (= x_46 (str.++ x_45 literal_36)))
(assert (= literal_49 "\u{22}\u{3e}"))
(assert (= x_50 (str.++ x_46 literal_49)))
(assert (= literal_48 "\u{73}\u{68}\u{6f}\u{77}\u{70}\u{65}\u{72}\u{70}\u{61}\u{67}\u{65}"))
(assert (= x_51 (str.++ x_50 literal_48)))
(assert (= literal_52 "\u{3c}\u{2f}\u{61}\u{3e}\u{3c}\u{2f}\u{64}\u{69}\u{76}\u{3e}"))
(assert (= x_53 (str.++ x_51 literal_52)))
(assert (str.in_re x_53 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
