(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun sigmaStar_10 () String)
(declare-fun literal_11 () String)
(declare-fun x_13 () String)
(declare-fun literal_12 () String)
(declare-fun x_14 () String)
(declare-fun x_15 () String)
(declare-fun literal_16 () String)
(declare-fun x_17 () String)
(declare-fun literal_18 () String)
(declare-fun x_19 () String)
(declare-fun x_20 () String)
(declare-fun literal_21 () String)
(declare-fun x_22 () String)
(declare-fun literal_23 () String)
(declare-fun x_24 () String)
(assert (= literal_11 "\u{70}\u{6f}\u{73}\u{74}\u{73}\u{20}\u{57}\u{48}\u{45}\u{52}\u{45}\u{20}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{64}\u{61}\u{74}\u{65}\u{73}\u{74}\u{61}\u{6d}\u{70}\u{20}\u{3c}\u{20}"))
(assert (= x_13 (str.++ literal_11 sigmaStar_10)))
(assert (= literal_12 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{20}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{69}\u{64}\u{2c}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{64}\u{61}\u{74}\u{65}\u{73}\u{74}\u{61}\u{6d}\u{70}\u{20}\u{46}\u{52}\u{4f}\u{4d}\u{20}"))
(assert (= x_14 (str.++ literal_12 sigmaStar_2)))
(assert (= x_15 (str.++ x_14 x_13)))
(assert (= literal_16 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{20}\u{2a}\u{20}\u{46}\u{52}\u{4f}\u{4d}\u{20}"))
(assert (= x_17 (str.++ literal_16 sigmaStar_3)))
(assert (= literal_18 "\u{66}\u{6f}\u{72}\u{75}\u{6d}\u{5f}\u{61}\u{74}\u{74}\u{61}\u{63}\u{68}\u{6d}\u{65}\u{6e}\u{74}\u{73}\u{20}\u{57}\u{48}\u{45}\u{52}\u{45}\u{20}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{69}\u{64}\u{3d}\u{27}"))
(assert (= x_19 (str.++ x_17 literal_18)))
(assert (= x_20 (str.++ x_19 x_15)))
(assert (= literal_21 "\u{27}"))
(assert (= x_22 (str.++ x_20 literal_21)))
(assert (= literal_23 "\u{61}\u{74}\u{74}\u{61}\u{63}\u{68}\u{6d}\u{65}\u{6e}\u{74}\u{73}\u{2f}"))
(assert (= x_24 (str.++ literal_23 x_22)))
(assert (str.in_re x_24 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{2f}\u{65}\u{76}\u{69}\u{6c}") (re.* re.allchar)))))
(check-sat)
(exit)
