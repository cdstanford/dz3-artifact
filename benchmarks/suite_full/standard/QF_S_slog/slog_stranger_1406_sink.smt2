(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun literal_9 () String)
(declare-fun x_10 () String)
(declare-fun literal_11 () String)
(declare-fun x_12 () String)
(declare-fun literal_13 () String)
(declare-fun x_14 () String)
(declare-fun literal_15 () String)
(declare-fun x_17 () String)
(declare-fun literal_18 () String)
(declare-fun x_19 () String)
(declare-fun literal_16 () String)
(declare-fun x_20 () String)
(declare-fun literal_21 () String)
(declare-fun x_22 () String)
(declare-fun literal_23 () String)
(declare-fun x_24 () String)
(declare-fun x_29 () String)
(declare-fun literal_27 () String)
(declare-fun literal_28 () String)
(declare-fun x_30 () String)
(declare-fun literal_32 () String)
(declare-fun x_33 () String)
(declare-fun literal_31 () String)
(declare-fun x_34 () String)
(declare-fun literal_35 () String)
(declare-fun x_36 () String)
(declare-fun literal_37 () String)
(declare-fun x_38 () String)
(declare-fun literal_39 () String)
(declare-fun x_40 () String)
(declare-fun literal_41 () String)
(declare-fun x_42 () String)
(declare-fun x_43 () String)
(declare-fun literal_44 () String)
(declare-fun x_45 () String)
(declare-fun literal_46 () String)
(declare-fun x_47 () String)
(declare-fun literal_48 () String)
(declare-fun x_49 () String)
(declare-fun x_50 () String)
(declare-fun x_51 () String)
(declare-fun literal_53 () String)
(declare-fun x_54 () String)
(declare-fun literal_52 () String)
(declare-fun x_55 () String)
(declare-fun literal_56 () String)
(declare-fun x_57 () String)
(declare-fun literal_58 () String)
(declare-fun x_59 () String)
(declare-fun literal_60 () String)
(declare-fun x_61 () String)
(assert (= literal_9 "\u{3c}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{20}\u{62}\u{6f}\u{72}\u{64}\u{65}\u{72}\u{3d}\u{22}\u{30}\u{22}\u{3e}\u{3c}\u{74}\u{72}\u{3e}\u{3c}\u{74}\u{64}\u{3e}\u{3c}\u{66}\u{6f}\u{72}\u{6d}\u{20}\u{74}\u{61}\u{72}\u{67}\u{65}\u{74}\u{3d}\u{22}\u{5f}\u{70}\u{61}\u{72}\u{65}\u{6e}\u{74}\u{22}\u{20}\u{6d}\u{65}\u{74}\u{68}\u{6f}\u{64}\u{3d}\u{22}\u{70}\u{6f}\u{73}\u{74}\u{22}\u{20}\u{61}\u{63}\u{74}\u{69}\u{6f}\u{6e}\u{3d}\u{22}"))
(assert (= x_10 (str.++ literal_9 sigmaStar_2)))
(assert (= literal_11 "\u{22}\u{3e}"))
(assert (= x_12 (str.++ x_10 literal_11)))
(assert (= literal_13 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{69}\u{64}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_14 (str.++ x_12 literal_13)))
(assert (= literal_15 "\u{22}\u{3e}"))
(assert (= x_17 (str.++ x_14 literal_15)))
(assert (= literal_18 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{72}\u{65}\u{67}\u{72}\u{61}\u{64}\u{65}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_19 (str.++ x_17 literal_18)))
(assert (= literal_16 "\u{72}\u{65}\u{67}\u{72}\u{61}\u{64}\u{65}"))
(assert (= x_20 (str.++ x_19 literal_16)))
(assert (= literal_21 "\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= x_22 (str.++ x_20 literal_21)))
(assert (= literal_23 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{63}\u{6f}\u{6e}\u{66}\u{69}\u{72}\u{6d}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}\u{31}\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= x_24 (str.++ x_22 literal_23)))
(assert (= literal_27 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{73}\u{65}\u{73}\u{73}\u{6b}\u{65}\u{79}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= literal_28 ""))
(assert (or (= x_29 literal_27) (= x_29 literal_28)))
(assert (= x_30 (str.++ x_24 x_29)))
(assert (= literal_32 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{73}\u{75}\u{62}\u{6d}\u{69}\u{74}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_33 (str.++ x_30 literal_32)))
(assert (= literal_31 "\u{79}\u{65}\u{73}"))
(assert (= x_34 (str.++ x_33 literal_31)))
(assert (= literal_35 "\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= x_36 (str.++ x_34 literal_35)))
(assert (= literal_37 "\u{3c}\u{2f}\u{66}\u{6f}\u{72}\u{6d}\u{3e}"))
(assert (= x_38 (str.++ x_36 literal_37)))
(assert (= literal_39 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{3c}\u{74}\u{64}\u{3e}\u{20}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{20}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{3c}\u{74}\u{64}\u{3e}"))
(assert (= x_40 (str.++ x_38 literal_39)))
(assert (= literal_41 "\u{3c}\u{66}\u{6f}\u{72}\u{6d}\u{20}\u{74}\u{61}\u{72}\u{67}\u{65}\u{74}\u{3d}\u{22}\u{5f}\u{70}\u{61}\u{72}\u{65}\u{6e}\u{74}\u{22}\u{20}\u{6d}\u{65}\u{74}\u{68}\u{6f}\u{64}\u{3d}\u{22}\u{70}\u{6f}\u{73}\u{74}\u{22}\u{20}\u{61}\u{63}\u{74}\u{69}\u{6f}\u{6e}\u{3d}\u{22}"))
(assert (= x_42 (str.++ x_40 literal_41)))
(assert (= x_43 (str.++ x_42 sigmaStar_3)))
(assert (= literal_44 "\u{22}\u{3e}"))
(assert (= x_45 (str.++ x_43 literal_44)))
(assert (= literal_46 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{69}\u{64}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_47 (str.++ x_45 literal_46)))
(assert (= literal_48 "\u{22}\u{3e}"))
(assert (= x_49 (str.++ x_47 literal_48)))
(assert (or (= x_50 literal_27) (= x_50 literal_28)))
(assert (= x_51 (str.++ x_49 x_50)))
(assert (= literal_53 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{73}\u{75}\u{62}\u{6d}\u{69}\u{74}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_54 (str.++ x_51 literal_53)))
(assert (= literal_52 "\u{6e}\u{6f}"))
(assert (= x_55 (str.++ x_54 literal_52)))
(assert (= literal_56 "\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= x_57 (str.++ x_55 literal_56)))
(assert (= literal_58 "\u{3c}\u{2f}\u{66}\u{6f}\u{72}\u{6d}\u{3e}"))
(assert (= x_59 (str.++ x_57 literal_58)))
(assert (= literal_60 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{3c}\u{2f}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{3e}"))
(assert (= x_61 (str.++ x_59 literal_60)))
(assert (str.in_re x_61 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
