(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun literal_11 () String)
(declare-fun x_14 () String)
(declare-fun sigmaStar_19 () String)
(declare-fun literal_18 () String)
(declare-fun x_26 () String)
(declare-fun sigmaStar_28 () String)
(declare-fun literal_27 () String)
(declare-fun x_29 () String)
(declare-fun x_30 () String)
(declare-fun literal_31 () String)
(declare-fun x_32 () String)
(declare-fun x_20 () String)
(assert (= literal_11 "\u{42}\u{79}\u{74}\u{65}\u{73}"))
(assert (= x_14 (str.++ sigmaStar_1 literal_11)))
(assert (= x_20 (str.replace sigmaStar_2 "\u{2c}" "\u{20}")))
(assert (= literal_18 "\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{34}\u{35}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{3e}"))
(assert (= x_26 (str.++ literal_18 sigmaStar_3)))
(assert (= literal_27 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{3e}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{66}\u{69}\u{6c}\u{65}\u{27}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{61}\u{74}\u{74}\u{61}\u{63}\u{68}\u{27}\u{20}\u{65}\u{6e}\u{63}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{27}\u{6d}\u{75}\u{6c}\u{74}\u{69}\u{70}\u{61}\u{72}\u{74}\u{2f}\u{66}\u{6f}\u{72}\u{6d}\u{2d}\u{64}\u{61}\u{74}\u{61}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{65}\u{78}\u{74}\u{62}\u{6f}\u{78}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3a}\u{32}\u{30}\u{30}\u{70}\u{78}\u{3b}\u{27}\u{3e}\u{3c}\u{62}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{73}\u{70}\u{61}\u{6e}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{73}\u{6d}\u{61}\u{6c}\u{6c}\u{32}\u{27}\u{3e}"))
(assert (= x_29 (str.++ x_26 literal_27)))
(assert (= x_30 (str.++ x_29 sigmaStar_28)))
(assert (= literal_31 "\u{3c}\u{2f}\u{73}\u{70}\u{61}\u{6e}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{5c}\u{6e}"))
(assert (= x_32 (str.++ x_30 literal_31)))
(assert (str.in_re x_32 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
