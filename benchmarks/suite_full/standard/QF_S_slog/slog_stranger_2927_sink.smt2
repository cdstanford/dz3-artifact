(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun literal_9 () String)
(declare-fun x_10 () String)
(declare-fun literal_11 () String)
(declare-fun x_12 () String)
(declare-fun x_13 () String)
(declare-fun literal_14 () String)
(declare-fun x_15 () String)
(declare-fun x_16 () String)
(declare-fun literal_18 () String)
(declare-fun x_22 () String)
(declare-fun literal_17 () String)
(declare-fun x_21 () String)
(declare-fun literal_20 () String)
(declare-fun literal_19 () String)
(declare-fun x_24 () String)
(declare-fun x_28 () String)
(declare-fun literal_27 () String)
(declare-fun x_29 () String)
(declare-fun literal_26 () String)
(declare-fun x_30 () String)
(declare-fun literal_25 () String)
(declare-fun x_31 () String)
(declare-fun x_32 () String)
(declare-fun literal_23 () String)
(declare-fun x_33 () String)
(declare-fun x_36 () String)
(declare-fun literal_35 () String)
(declare-fun x_37 () String)
(declare-fun literal_38 () String)
(declare-fun x_39 () String)
(declare-fun x_40 () String)
(declare-fun literal_41 () String)
(declare-fun x_42 () String)
(declare-fun x_44 () String)
(declare-fun literal_43 () String)
(declare-fun x_45 () String)
(declare-fun x_47 () String)
(declare-fun literal_46 () String)
(declare-fun x_48 () String)
(declare-fun literal_49 () String)
(declare-fun x_50 () String)
(declare-fun x_51 () String)
(declare-fun x_53 () String)
(declare-fun literal_52 () String)
(declare-fun x_54 () String)
(declare-fun literal_55 () String)
(declare-fun x_56 () String)
(assert (= literal_9 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{20}\u{74}\u{66}\u{2e}\u{2a}\u{2c}\u{20}\u{74}\u{74}\u{2e}\u{2a}\u{2c}\u{20}\u{74}\u{75}\u{2e}\u{75}\u{73}\u{65}\u{72}\u{5f}\u{69}\u{64}\u{2c}\u{75}\u{73}\u{65}\u{72}\u{5f}\u{6e}\u{61}\u{6d}\u{65}\u{2c}\u{20}\u{4d}\u{41}\u{58}\u{28}\u{74}\u{70}\u{2e}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{69}\u{64}\u{29}\u{20}\u{61}\u{73}\u{20}\u{6c}\u{61}\u{73}\u{74}\u{5f}\u{69}\u{64}\u{2c}\u{20}\u{43}\u{4f}\u{55}\u{4e}\u{54}\u{28}\u{74}\u{70}\u{2e}\u{70}\u{6f}\u{73}\u{74}\u{5f}\u{69}\u{64}\u{29}\u{20}\u{61}\u{73}\u{20}\u{63}\u{6f}\u{75}\u{6e}\u{74}\u{5f}\u{70}\u{6f}\u{73}\u{74}\u{73}\u{20}\u{46}\u{52}\u{4f}\u{4d}\u{20}"))
(assert (= x_10 (str.++ literal_9 sigmaStar_3)))
(assert (= literal_11 "\u{66}\u{6f}\u{72}\u{75}\u{6d}\u{73}\u{20}\u{74}\u{66}\u{0d}\u{0a}\u{09}\u{49}\u{4e}\u{4e}\u{45}\u{52}\u{20}\u{4a}\u{4f}\u{49}\u{4e}\u{20}"))
(assert (= x_12 (str.++ x_10 literal_11)))
(assert (= x_13 (str.++ x_12 sigmaStar_5)))
(assert (= literal_14 "\u{74}\u{68}\u{72}\u{65}\u{61}\u{64}\u{73}\u{20}\u{74}\u{74}\u{20}\u{55}\u{53}\u{49}\u{4e}\u{47}\u{28}\u{66}\u{6f}\u{72}\u{75}\u{6d}\u{5f}\u{69}\u{64}\u{29}\u{0d}\u{0a}\u{09}\u{49}\u{4e}\u{4e}\u{45}\u{52}\u{20}\u{4a}\u{4f}\u{49}\u{4e}\u{20}"))
(assert (= x_15 (str.++ x_13 literal_14)))
(assert (= x_16 (str.++ x_15 sigmaStar_0)))
(assert (= literal_18 "\u{70}\u{6f}\u{73}\u{74}\u{73}\u{20}\u{74}\u{70}\u{20}\u{55}\u{53}\u{49}\u{4e}\u{47}\u{28}\u{74}\u{68}\u{72}\u{65}\u{61}\u{64}\u{5f}\u{69}\u{64}\u{29}\u{0d}\u{0a}\u{09}\u{49}\u{4e}\u{4e}\u{45}\u{52}\u{20}\u{4a}\u{4f}\u{49}\u{4e}\u{20}"))
(assert (= x_22 (str.++ x_16 literal_18)))
(assert (= literal_17 "\u{3c}\u{74}\u{64}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}"))
(assert (= literal_20 "\u{74}\u{62}\u{6c}\u{32}"))
(assert (= literal_19 "\u{74}\u{62}\u{6c}\u{31}"))
(assert (or (= x_21 literal_20) (= x_21 literal_19)))
(assert (= x_24 (str.++ literal_17 x_21)))
(assert (= x_28 (str.++ x_22 sigmaStar_6)))
(assert (= literal_27 "\u{75}\u{73}\u{65}\u{72}\u{73}\u{20}\u{74}\u{75}\u{20}\u{4f}\u{4e}\u{20}\u{74}\u{74}\u{2e}\u{74}\u{68}\u{72}\u{65}\u{61}\u{64}\u{5f}\u{6c}\u{61}\u{73}\u{74}\u{75}\u{73}\u{65}\u{72}\u{3d}\u{74}\u{75}\u{2e}\u{75}\u{73}\u{65}\u{72}\u{5f}\u{69}\u{64}\u{0d}\u{0a}\u{09}\u{57}\u{48}\u{45}\u{52}\u{45}\u{20}"))
(assert (= x_29 (str.++ x_28 literal_27)))
(assert (= literal_26 "\u{66}\u{6f}\u{72}\u{75}\u{6d}\u{5f}\u{61}\u{63}\u{63}\u{65}\u{73}\u{73}"))
(assert (= x_30 (str.++ x_29 literal_26)))
(assert (= literal_25 "\u{20}\u{47}\u{52}\u{4f}\u{55}\u{50}\u{20}\u{42}\u{59}\u{20}\u{74}\u{68}\u{72}\u{65}\u{61}\u{64}\u{5f}\u{69}\u{64}\u{20}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{20}\u{42}\u{59}\u{20}\u{74}\u{68}\u{72}\u{65}\u{61}\u{64}\u{5f}\u{6c}\u{61}\u{73}\u{74}\u{70}\u{6f}\u{73}\u{74}\u{20}\u{44}\u{45}\u{53}\u{43}\u{20}\u{4c}\u{49}\u{4d}\u{49}\u{54}\u{20}\u{30}\u{2c}"))
(assert (= x_31 (str.++ x_30 literal_25)))
(assert (= x_32 (str.++ x_31 sigmaStar_8)))
(assert (= literal_23 "\u{3c}\u{2f}\u{73}\u{70}\u{61}\u{6e}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}"))
(assert (or (= x_33 literal_20) (= x_33 literal_19)))
(assert (= x_36 (str.++ literal_23 x_33)))
(assert (= literal_35 "\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{73}\u{70}\u{61}\u{6e}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{73}\u{6d}\u{61}\u{6c}\u{6c}\u{27}\u{3e}"))
(assert (= x_37 (str.++ x_24 literal_35)))
(assert (= literal_38 "\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{73}\u{70}\u{61}\u{6e}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{73}\u{6d}\u{61}\u{6c}\u{6c}\u{27}\u{3e}\u{3c}\u{61}\u{20}\u{68}\u{72}\u{65}\u{66}\u{3d}\u{27}"))
(assert (= x_39 (str.++ x_36 literal_38)))
(assert (= x_40 (str.++ x_37 x_39)))
(assert (= literal_41 "\u{70}\u{72}\u{6f}\u{66}\u{69}\u{6c}\u{65}\u{2e}\u{70}\u{68}\u{70}\u{3f}\u{6c}\u{6f}\u{6f}\u{6b}\u{75}\u{70}\u{3d}"))
(assert (= x_42 (str.++ x_40 literal_41)))
(assert (= x_44 (str.++ x_42 x_32)))
(assert (= literal_43 "\u{3c}\u{2f}\u{61}\u{3e}\u{3c}\u{2f}\u{73}\u{70}\u{61}\u{6e}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}"))
(assert (or (= x_45 literal_20) (= x_45 literal_19)))
(assert (= x_47 (str.++ literal_43 x_45)))
(assert (= literal_46 "\u{27}\u{3e}"))
(assert (= x_48 (str.++ x_44 literal_46)))
(assert (= literal_49 "\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{73}\u{70}\u{61}\u{6e}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{73}\u{6d}\u{61}\u{6c}\u{6c}\u{27}\u{3e}"))
(assert (= x_50 (str.++ x_47 literal_49)))
(assert (= x_51 (str.++ x_48 x_32)))
(assert (= x_53 (str.++ x_51 x_50)))
(assert (= literal_52 "\u{66}\u{6f}\u{72}\u{75}\u{6d}\u{64}\u{61}\u{74}\u{65}"))
(assert (= x_54 (str.++ x_53 literal_52)))
(assert (= literal_55 "\u{3c}\u{2f}\u{73}\u{70}\u{61}\u{6e}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{5c}\u{6e}"))
(assert (= x_56 (str.++ x_54 literal_55)))
(assert (str.in_re x_56 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
