(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun literal_8 () String)
(declare-fun x_9 () String)
(declare-fun literal_10 () String)
(declare-fun x_11 () String)
(declare-fun x_12 () String)
(declare-fun sigmaStar_18 () String)
(declare-fun sigmaStar_20 () String)
(declare-fun literal_15 () String)
(declare-fun x_22 () String)
(declare-fun x_21 () String)
(declare-fun x_23 () String)
(declare-fun literal_24 () String)
(declare-fun x_25 () String)
(declare-fun x_26 () String)
(declare-fun literal_28 () String)
(declare-fun x_29 () String)
(declare-fun x_30 () String)
(declare-fun x_31 () String)
(declare-fun literal_32 () String)
(declare-fun x_33 () String)
(declare-fun x_34 () String)
(declare-fun literal_35 () String)
(declare-fun x_36 () String)
(declare-fun x_14 () String)
(declare-fun epsilon () String)
(declare-fun x_37 () String)
(declare-fun literal_38 () String)
(declare-fun x_39 () String)
(declare-fun x_42 () String)
(declare-fun sigmaStar_44 () String)
(declare-fun literal_43 () String)
(declare-fun x_45 () String)
(declare-fun x_46 () String)
(declare-fun literal_47 () String)
(declare-fun x_48 () String)
(declare-fun x_50 () String)
(declare-fun sigmaStar_52 () String)
(declare-fun literal_51 () String)
(declare-fun x_53 () String)
(declare-fun x_54 () String)
(declare-fun literal_55 () String)
(declare-fun x_56 () String)
(declare-fun x_57 () String)
(declare-fun sigmaStar_59 () String)
(declare-fun literal_58 () String)
(declare-fun x_60 () String)
(declare-fun x_61 () String)
(declare-fun literal_62 () String)
(declare-fun x_63 () String)
(assert (= literal_8 "\u{3c}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{20}\u{61}\u{6c}\u{69}\u{67}\u{6e}\u{3d}\u{27}\u{63}\u{65}\u{6e}\u{74}\u{65}\u{72}\u{27}\u{20}\u{63}\u{65}\u{6c}\u{6c}\u{70}\u{61}\u{64}\u{64}\u{69}\u{6e}\u{67}\u{3d}\u{27}\u{30}\u{27}\u{20}\u{63}\u{65}\u{6c}\u{6c}\u{73}\u{70}\u{61}\u{63}\u{69}\u{6e}\u{67}\u{3d}\u{27}\u{31}\u{27}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{34}\u{30}\u{30}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{2d}\u{62}\u{6f}\u{72}\u{64}\u{65}\u{72}\u{27}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{20}\u{63}\u{6f}\u{6c}\u{73}\u{70}\u{61}\u{6e}\u{3d}\u{27}\u{32}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_9 (str.++ literal_8 sigmaStar_4)))
(assert (= literal_10 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_11 (str.++ x_9 literal_10)))
(assert (= x_12 (str.++ x_11 sigmaStar_5)))
(assert (= literal_15 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{3e}"))
(assert (= x_22 (str.++ x_12 literal_15)))
(assert (or (= x_21 sigmaStar_18) (= x_21 sigmaStar_20)))
(assert (= x_23 (str.++ x_22 x_21)))
(assert (= literal_24 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_25 (str.++ x_23 literal_24)))
(assert (= x_26 (str.++ x_25 sigmaStar_3)))
(assert (= literal_28 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{3e}"))
(assert (= x_29 (str.++ x_26 literal_28)))
(assert (or (= x_30 sigmaStar_18) (= x_30 sigmaStar_20) (= x_30 sigmaStar_7)))
(assert (= x_31 (str.++ x_29 x_30)))
(assert (= literal_32 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_33 (str.++ x_31 literal_32)))
(assert (= x_34 (str.++ x_33 sigmaStar_2)))
(assert (= literal_35 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{3e}"))
(assert (= x_36 (str.++ x_34 literal_35)))
(assert (= epsilon ""))
(assert (= x_14 epsilon))
(assert (= x_37 (str.++ x_36 x_14)))
(assert (= literal_38 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_39 (str.++ x_37 literal_38)))
(assert (= x_42 (str.++ x_39 sigmaStar_6)))
(assert (= literal_43 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{3e}"))
(assert (= x_45 (str.++ x_42 literal_43)))
(assert (= x_46 (str.++ x_45 sigmaStar_44)))
(assert (= literal_47 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_48 (str.++ x_46 literal_47)))
(assert (= x_50 (str.++ x_48 sigmaStar_1)))
(assert (= literal_51 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{31}\u{27}\u{3e}"))
(assert (= x_53 (str.++ x_50 literal_51)))
(assert (= x_54 (str.++ x_53 sigmaStar_52)))
(assert (= literal_55 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{77}\u{69}\u{64}\u{74}\u{68}\u{3d}\u{27}\u{31}\u{25}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{20}\u{73}\u{74}\u{79}\u{6c}\u{65}\u{3d}\u{27}\u{77}\u{68}\u{69}\u{74}\u{65}\u{2d}\u{73}\u{70}\u{61}\u{63}\u{65}\u{3a}\u{6e}\u{6f}\u{77}\u{72}\u{61}\u{70}\u{27}\u{3e}\u{3c}\u{62}\u{3e}"))
(assert (= x_56 (str.++ x_54 literal_55)))
(assert (= x_57 (str.++ x_56 sigmaStar_0)))
(assert (= literal_58 "\u{3c}\u{2f}\u{62}\u{3e}\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{32}\u{27}\u{3e}"))
(assert (= x_60 (str.++ x_57 literal_58)))
(assert (= x_61 (str.++ x_60 sigmaStar_59)))
(assert (= literal_62 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{2f}\u{74}\u{61}\u{62}\u{6c}\u{65}\u{3e}\u{5c}\u{6e}"))
(assert (= x_63 (str.++ x_61 literal_62)))
(assert (str.in_re x_63 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
