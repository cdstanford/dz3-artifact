(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun literal_28 () String)
(declare-fun x_31 () String)
(declare-fun literal_27 () String)
(declare-fun literal_24 () String)
(declare-fun x_33 () String)
(declare-fun literal_34 () String)
(declare-fun x_36 () String)
(declare-fun x_46 () String)
(declare-fun literal_40 () String)
(declare-fun literal_41 () String)
(declare-fun literal_44 () String)
(declare-fun literal_47 () String)
(declare-fun x_49 () String)
(declare-fun literal_54 () String)
(declare-fun x_56 () String)
(declare-fun literal_58 () String)
(declare-fun x_60 () String)
(declare-fun x_63 () String)
(declare-fun literal_62 () String)
(declare-fun literal_61 () String)
(declare-fun x_64 () String)
(declare-fun literal_65 () String)
(declare-fun x_66 () String)
(assert (= literal_28 "\u{53}\u{45}\u{4c}\u{45}\u{43}\u{54}\u{20}\u{43}\u{4f}\u{55}\u{4e}\u{54}\u{28}\u{2a}\u{29}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{46}\u{52}\u{4f}\u{4d}\u{20}\u{6a}\u{6f}\u{75}\u{72}\u{6e}\u{61}\u{6c}\u{5f}\u{65}\u{6e}\u{74}\u{72}\u{69}\u{65}\u{73}\u{20}\u{6a}\u{2c}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{75}\u{73}\u{65}\u{72}\u{20}\u{75}\u{2c}\u{20}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{75}\u{73}\u{65}\u{72}\u{5f}\u{73}\u{74}\u{75}\u{64}\u{65}\u{6e}\u{74}\u{73}\u{20}\u{73}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{57}\u{48}\u{45}\u{52}\u{45}\u{20}\u{6a}\u{2e}\u{75}\u{73}\u{65}\u{72}\u{69}\u{64}\u{20}\u{3d}\u{20}\u{75}\u{2e}\u{69}\u{64}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{41}\u{4e}\u{44}\u{20}\u{73}\u{2e}\u{75}\u{73}\u{65}\u{72}\u{69}\u{64}\u{20}\u{3d}\u{20}\u{75}\u{2e}\u{69}\u{64}\u{20}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{41}\u{4e}\u{44}\u{20}"))
(assert (= literal_27 ""))
(assert (= literal_24 "\u{73}\u{2e}\u{63}\u{6f}\u{75}\u{72}\u{73}\u{65}\u{20}\u{3d}\u{20}\u{27}\u{27}\u{20}\u{41}\u{4e}\u{44}"))
(assert (or (= x_31 literal_27) (= x_31 literal_24)))
(assert (= x_33 (str.++ literal_28 x_31)))
(assert (= literal_34 "\u{20}\u{6a}\u{2e}\u{6a}\u{6f}\u{75}\u{72}\u{6e}\u{61}\u{6c}\u{20}\u{3d}\u{20}"))
(assert (= x_36 (str.++ x_33 literal_34)))
(assert (= literal_40 "\u{77}\u{65}\u{65}\u{6b}"))
(assert (= literal_41 "\u{74}\u{6f}\u{70}\u{69}\u{63}"))
(assert (= literal_44 ""))
(assert (or (= x_46 literal_40) (= x_46 literal_41) (= x_46 literal_44)))
(assert (= literal_47 "\u{20}"))
(assert (= x_49 (str.++ x_46 literal_47)))
(assert (= literal_54 "\u{3c}\u{68}\u{33}\u{3e}"))
(assert (= x_56 (str.++ literal_54 x_49)))
(assert (= literal_58 "\u{20}\u{2d}\u{20}"))
(assert (= x_60 (str.++ x_56 literal_58)))
(assert (= literal_62 ""))
(assert (= literal_61 "\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{28}\u{3c}\u{61}\u{20}\u{68}\u{72}\u{65}\u{66}\u{3d}\u{5c}\u{22}\u{72}\u{65}\u{70}\u{6f}\u{72}\u{74}\u{2e}\u{70}\u{68}\u{70}\u{3f}\u{69}\u{64}\u{3d}\u{5c}\u{22}\u{3e}\u{76}\u{69}\u{65}\u{77}\u{61}\u{6c}\u{6c}\u{65}\u{6e}\u{74}\u{72}\u{69}\u{65}\u{73}\u{3c}\u{2f}\u{61}\u{3e}\u{29}"))
(assert (or (= x_63 literal_62) (= x_63 literal_61)))
(assert (= x_64 (str.++ x_60 x_63)))
(assert (= literal_65 "\u{3c}\u{2f}\u{68}\u{33}\u{3e}"))
(assert (= x_66 (str.++ x_64 literal_65)))
(assert (str.in_re x_66 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
