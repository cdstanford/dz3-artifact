(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun literal_11 () String)
(declare-fun x_14 () String)
(declare-fun x_13 () String)
(declare-fun literal_8 () String)
(declare-fun literal_12 () String)
(declare-fun x_15 () String)
(declare-fun literal_16 () String)
(declare-fun x_17 () String)
(declare-fun literal_18 () String)
(declare-fun x_19 () String)
(declare-fun literal_2 () String)
(declare-fun x_20 () String)
(declare-fun literal_21 () String)
(declare-fun x_22 () String)
(assert (= literal_11 "\u{3c}\u{61}\u{20}\u{74}\u{69}\u{74}\u{6c}\u{65}\u{3d}\u{5c}\u{22}\u{65}\u{64}\u{69}\u{74}\u{5c}\u{22}\u{20}\u{68}\u{72}\u{65}\u{66}\u{3d}\u{5c}\u{22}\u{2f}\u{71}\u{75}\u{65}\u{73}\u{74}\u{69}\u{6f}\u{6e}\u{2f}\u{71}\u{75}\u{65}\u{73}\u{74}\u{69}\u{6f}\u{6e}\u{2e}\u{70}\u{68}\u{70}\u{3f}\u{69}\u{64}\u{3d}"))
(assert (= x_14 (str.++ literal_11 sigmaStar_5)))
(assert (= literal_8 "\u{26}\u{61}\u{6d}\u{70}\u{3b}\u{63}\u{6f}\u{6e}\u{74}\u{65}\u{78}\u{74}\u{71}\u{75}\u{69}\u{7a}\u{3d}"))
(assert (= literal_12 ""))
(assert (or (= x_13 literal_8) (= x_13 literal_12)))
(assert (= x_15 (str.++ x_14 x_13)))
(assert (= literal_16 "\u{5c}\u{22}\u{3e}\u{0d}\u{0a}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{20}\u{3c}\u{69}\u{6d}\u{67}\u{20}\u{73}\u{72}\u{63}\u{3d}\u{5c}\u{22}"))
(assert (= x_17 (str.++ x_15 literal_16)))
(assert (= literal_18 "\u{2f}\u{74}\u{2f}\u{65}\u{64}\u{69}\u{74}\u{2e}\u{67}\u{69}\u{66}\u{5c}\u{22}\u{20}\u{62}\u{6f}\u{72}\u{64}\u{65}\u{72}\u{3d}\u{5c}\u{22}\u{30}\u{5c}\u{22}\u{20}\u{61}\u{6c}\u{74}\u{3d}\u{5c}\u{22}"))
(assert (= x_19 (str.++ x_17 literal_18)))
(assert (= literal_2 "\u{65}\u{64}\u{69}\u{74}"))
(assert (= x_20 (str.++ x_19 literal_2)))
(assert (= literal_21 "\u{5c}\u{22}\u{20}\u{2f}\u{3e}\u{3c}\u{2f}\u{61}\u{3e}"))
(assert (= x_22 (str.++ x_20 literal_21)))
(assert (str.in_re x_22 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
