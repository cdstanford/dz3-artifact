(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun literal_5 () String)
(declare-fun x_3 () String)
(declare-fun literal_2 () String)
(declare-fun literal_1 () String)
(declare-fun x_6 () String)
(declare-fun literal_8 () String)
(declare-fun x_9 () String)
(declare-fun literal_7 () String)
(declare-fun x_10 () String)
(declare-fun literal_11 () String)
(declare-fun x_12 () String)
(assert (= literal_5 "\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{68}\u{69}\u{64}\u{64}\u{65}\u{6e}\u{22}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{22}\u{73}\u{6f}\u{6c}\u{75}\u{74}\u{69}\u{6f}\u{6e}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= literal_2 ""))
(assert (= literal_1 ""))
(assert (or (= x_3 literal_2) (= x_3 literal_1)))
(assert (= x_6 (str.++ literal_5 x_3)))
(assert (= literal_8 "\u{22}\u{20}\u{2f}\u{3e}\u{3c}\u{69}\u{6e}\u{70}\u{75}\u{74}\u{20}\u{74}\u{79}\u{70}\u{65}\u{3d}\u{22}\u{73}\u{75}\u{62}\u{6d}\u{69}\u{74}\u{22}\u{20}\u{76}\u{61}\u{6c}\u{75}\u{65}\u{3d}\u{22}"))
(assert (= x_9 (str.++ x_6 literal_8)))
(assert (= literal_7 "\u{76}\u{69}\u{65}\u{77}\u{73}\u{6f}\u{6c}\u{75}\u{74}\u{69}\u{6f}\u{6e}"))
(assert (= x_10 (str.++ x_9 literal_7)))
(assert (= literal_11 "\u{22}\u{20}\u{2f}\u{3e}"))
(assert (= x_12 (str.++ x_10 literal_11)))
(assert (str.in_re x_12 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
